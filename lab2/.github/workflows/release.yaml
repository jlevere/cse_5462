name: Scheduled Release

on:
  schedule:
    - cron: '37 17 23 1 *'
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
        type: string


jobs:
  create-tag:
    name: Create the Git tag
    if: >-
      github.event_name == 'workflow_dispatch' ||
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.get-version.outputs.version }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Extract version to be released
        id: get-version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            # For scheduled runs, generate version based on date
            DATE=$(date +'%Y.%m.%d')
            # Get the current highest version for today
            git fetch --tags
            CURRENT_VERSIONS=$(git tag -l "$DATE.*" | sort -V)
            if [ -z "$CURRENT_VERSIONS" ]; then
              # First release of the day
              VERSION="$DATE.1"
            else
              # Increment the last version number
              LAST_VERSION=$(echo "$CURRENT_VERSIONS" | tail -n1)
              PATCH=$(echo "$LAST_VERSION" | rev | cut -d'.' -f1 | rev)
              NEXT_PATCH=$((PATCH + 1))
              VERSION="$DATE.$NEXT_PATCH"
            fi
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          fi
      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          custom_tag: "${{ steps.get-version.outputs.version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""


  create-release:
    name: Create a release on GitHub
    needs: create-tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: "${{ needs.create-tag.outputs.release-tag }}"

  upload-bins:
    name: Upload Binaries
    runs-on: ubuntu-latest
    needs: [create-release, create-tag]
    permissions:
      contents: write
    steps:
      - name: Checkout ${{ needs.create-tag.outputs.release-tag }}
        uses: actions/checkout@v4
        with:
          ref: "${{ needs.create-tag.outputs.release-tag }}"

      - uses: mlugg/setup-zig@v1
        with:
          version: master

      - name: Build binaries
        run: |
          zig build -Doptimize=ReleaseSafe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            zig-out/bin/*
          tag_name: "${{ needs.create-tag.outputs.release-tag }}"