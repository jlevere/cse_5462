name: Scheduled Release

on:
  schedule:
    - cron: "37 17 4 3 *"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
        type: string

jobs:
  create-tag:
    name: Create the Git tag
    if: >-
      github.event_name == 'workflow_dispatch' ||
      github.event.pull_request.merged == true ||
      github.event_name == 'schedule'
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.get-version.outputs.version }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Extract version to be released
        id: get-version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            # For scheduled runs, just use 1.0.0
            echo "version=1.0.0" >> "$GITHUB_OUTPUT"
          fi
      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          custom_tag: "${{ steps.get-version.outputs.version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""

  create-release:
    name: Create a release on GitHub
    needs: create-tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: "${{ needs.create-tag.outputs.release-tag }}"

  upload-bins:
    name: Upload Binaries
    runs-on: ubuntu-latest
    needs: [create-release, create-tag]
    permissions:
      contents: write
    steps:
      - name: Checkout ${{ needs.create-tag.outputs.release-tag }}
        uses: actions/checkout@v4
        with:
          ref: "${{ needs.create-tag.outputs.release-tag }}"

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: ${{ secrets.ATTIC_CACHE }}
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Build binaries
        run: |
          nix develop .#build --command zig build -Doptimize=ReleaseSafe -Dversion=${{ needs.create-tag.outputs.release-tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            zig-out/bin/*
          tag_name: "${{ needs.create-tag.outputs.release-tag }}"
